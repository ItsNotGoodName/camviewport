# yaml-language-server: https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: Release
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  create:
    permissions: write-all
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set version
        run: echo "VERSION=$(git tag --points-at HEAD)" >> $GITHUB_ENV

      - name: Copy static files
        run: |
          mkdir -p dist
          tar -czf dist/layouts.tar.gz layouts

      - name: Create release
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create --draft --generate-notes --target $GITHUB_SHA $VERSION dist/*
  build:
    needs: [create]
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: bullseye
          - arch: x86_64
            distro: bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: uraimo/run-on-arch-action@v3
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          base_image: ${{ matrix.base_image }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Create an dist directory
          setup: |
            mkdir -p "${PWD}/dist"

          # Mount the dist directory as /dist in the container
          dockerRunArgs: |
            --volume "${PWD}/dist:/dist"

          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            VERSION: ${VERSION}

          # The shell to run commands with in the container
          shell: /bin/sh

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get install -y libmpv-dev

          # Produce a binary artifact and place it in the mounted volume
          run: |
            make build
            cp ./dist/* "/dist/"

      - name: Upload dist
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload --target $GITHUB_SHA $VERSION dist/*
